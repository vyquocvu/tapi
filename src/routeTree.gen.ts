/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as ContentTypeBuilderIndexRouteImport } from './routes/content-type-builder/index'
import { Route as ContentManagerIndexRouteImport } from './routes/content-manager/index'
import { Route as ApiDashboardIndexRouteImport } from './routes/api-dashboard/index'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContentTypeBuilderIndexRoute = ContentTypeBuilderIndexRouteImport.update({
  id: '/content-type-builder/',
  path: '/content-type-builder/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContentManagerIndexRoute = ContentManagerIndexRouteImport.update({
  id: '/content-manager/',
  path: '/content-manager/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDashboardIndexRoute = ApiDashboardIndexRouteImport.update({
  id: '/api-dashboard/',
  path: '/api-dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/api-dashboard': typeof ApiDashboardIndexRoute
  '/content-manager': typeof ContentManagerIndexRoute
  '/content-type-builder': typeof ContentTypeBuilderIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/api-dashboard': typeof ApiDashboardIndexRoute
  '/content-manager': typeof ContentManagerIndexRoute
  '/content-type-builder': typeof ContentTypeBuilderIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/api-dashboard/': typeof ApiDashboardIndexRoute
  '/content-manager/': typeof ContentManagerIndexRoute
  '/content-type-builder/': typeof ContentTypeBuilderIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/api-dashboard'
    | '/content-manager'
    | '/content-type-builder'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/api-dashboard'
    | '/content-manager'
    | '/content-type-builder'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/api-dashboard/'
    | '/content-manager/'
    | '/content-type-builder/'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  ApiDashboardIndexRoute: typeof ApiDashboardIndexRoute
  ContentManagerIndexRoute: typeof ContentManagerIndexRoute
  ContentTypeBuilderIndexRoute: typeof ContentTypeBuilderIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content-type-builder/': {
      id: '/content-type-builder/'
      path: '/content-type-builder'
      fullPath: '/content-type-builder'
      preLoaderRoute: typeof ContentTypeBuilderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content-manager/': {
      id: '/content-manager/'
      path: '/content-manager'
      fullPath: '/content-manager'
      preLoaderRoute: typeof ContentManagerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api-dashboard/': {
      id: '/api-dashboard/'
      path: '/api-dashboard'
      fullPath: '/api-dashboard'
      preLoaderRoute: typeof ApiDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  ApiDashboardIndexRoute: ApiDashboardIndexRoute,
  ContentManagerIndexRoute: ContentManagerIndexRoute,
  ContentTypeBuilderIndexRoute: ContentTypeBuilderIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
